
Release 0.1.0: The GUI Cocoa app

Goal: Have a usable repl that people can play with and make Cocoa apps with

* Handle structure parameters
* Make simple example Cocoa app
* repl loads IMPORT-CLASSES and : macros
* Fix mark handling in ##wr

Release 0.2.0: iOS

Goal: Write code on iOS

* Make a cocoapod for gambit (libgambc)
* Make a cocoapod for libffi (?)
* Make a cocoapod for gambit-objc
* Document & automate process of getting gambit running in iOS application

Release 0.3.0: Easiness

Goal: Make it robust and fun to play with.  Take away corner cases.
* Raise decent, descriptive exceptions w/gambit via longjmp()
* Handle OOMs via longjmp()
* Make objc structures == gambit structures?

Contributing to gambit:

* ___GAMBIT_H isn't an effective include guard.
* Version check defeats linking with stand-alone C files. (Have to sed stuff.)
* Makefile
* Can't make a link file if you don't have a source file named after the module
  which is linked last. (Can't load because of undefined symbol.)
  Not even true.  There doesn't seem to be a way to compile and link multiple
  files into a dynamic object.
* Extract option parsing and stuff to make gambit REPL-building easy

